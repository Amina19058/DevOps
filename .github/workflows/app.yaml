---
name: Python App

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

permissions:
  contents: read

defaults:
  run:
    working-directory: .

jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
        continue-on-error: true

      - name: Test with pytest
        run: |
          pytest

  security:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v3

      - uses: snyk/actions/setup@master
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Snyk monitor
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_python/snyk.sarif

    push:
      timeout-minutes: 30
      runs-on: ubuntu-latest
      needs: ['build', 'security']
      name: PDocker related steps

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops:latest
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache-new

        - name: Move cache
          run:
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
